% \iffalse meta-comment
%
% File: siunitx-table.dtx Copyright (C) 2016-2017 Joseph Wright
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    http://www.latex-project.org/lppl.txt
%
% This file is part of the "siunitx bundle" (The Work in LPPL)
% and all files in that bundle must be distributed together.
%
% The released version of this bundle is available from CTAN.
%
% -----------------------------------------------------------------------
%
% The development version of the bundle can be found at
%
%    http://github.com/josephwright/siunitx
%
% for those people who are interested.
%
% -----------------------------------------------------------------------
%
%<*driver>
\documentclass{l3doc}
% The next line is needed so that \GetFileInfo will be able to pick up
% version data
\usepackage{siunitx}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{siunitx.sty}
%
% \title{^^A
%   \pkg{siunitx-table} -- Formatting tables^^A
%   \thanks{This file describes \fileversion,
%     last revised \filedate.}^^A
% }
%
% \author{^^A
%  Joseph Wright^^A
%  \thanks{^^A
%    E-mail:
%    \href{mailto:joseph.wright@morningstar2.co.uk}
%      {joseph.wright@morningstar2.co.uk}^^A
%   }^^A
% }
%
% \date{Released \filedate}
%
% \maketitle
%
% \begin{documentation}
%
% \end{documentation}
%
% \begin{implementation}
%
% \section{\pkg{siunitx-table} implementation}
%
% Start the \pkg{DocStrip} guards.
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% Identify the internal prefix (\LaTeX3 \pkg{DocStrip} convention): only
% internal material in this \emph{submodule} should be used directly.
%    \begin{macrocode}
%<@@=siunitx_table>
%    \end{macrocode}
%
% \subsection{Collecting tokens}
%
% \begin{variable}{\l_@@_collect_tl}
%   Space for tokens.
%    \begin{macrocode}
\tl_new:N \l_@@_collect_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\siunitx_table_collect:}
%   Collecting a tabular cell means doing a token-by-token collection.
%   In previous versions of \pkg{siunitx} that was done along with picking
%   out the numerical part, but the code flow ends up very tricky. Here,
%   therefore, we just collect up the unchanged tokens first. Some issues
%   with the way that the \texttt{peek} functions are currently set up in
%   \pkg{expl3} mean that at present there is a need to do stuff by hand
%   here.
%    \begin{macrocode}
\cs_new_protected:Npn \siunitx_table_collect:
  {
    \tl_clear:N \l_@@_collect_tl
    \cs_set_protected:Npn \__peek_execute_branches:
      {
        \if_catcode:w \exp_not:N \l_peek_token \c_group_begin_token
          \exp_after:wN \@@_collect_group:n
        \else:
          \exp_after:wN \@@_collect_token:N
        \fi:
      }
    \@@_collect_loop:
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_collect_loop:}
% \begin{macro}[aux]{\@@_collect_group:n}
% \begin{macro}[aux]{\@@_collect_token:N}
% \begin{macro}[aux]{\@@_collect_search:NnF}
% \begin{macro}[aux]{\@@_collect_search_aux:NNn}
%   Collecting up the cell content needs a loop: this is done using
%   a |peek| approach as it's most natural. (A slower approach is possible
%   using something like the |\tl_lower_case:n| loop code.) The set of
%   possible tokens is somewhat limited compared to an arbitrary cell
%   (\foreign{cf.}~the approach in \pkg{collcell}): the special cases are
%   pulled out for manual handling. The flexible lookup approach is more-or-less
%   the same idea as in the kernel |case| functions. The |\relax| special case
%   covers the case where |\\| has been expanded in an empty cell.
%    \begin{macrocode}
\cs_new_protected:Npn \@@_collect_loop:
  { \peek_after:Nw \__peek_ignore_spaces_execute_branches: }
\cs_new_protected:Npn \@@_collect_group:n #1
  {
    \tl_put_right:Nn \l_@@_collect_tl { {#1} }
    \@@_collect_loop:
  }
\cs_new_protected:Npn \@@_collect_token:N #1
  {
    \@@_collect_search:NnF #1
      {
        \ignorespaces         { \@@_collect_loop: }
        \unskip               { \@@_collect_loop: }
        \end                  { \siunitx_table_print: \end }
        \relax                { \relax }
        \tabularnewline       { \siunitx_table_print: \tabularnewline }
        \siunitx_table_print: { \siunitx_table_print: }
      }
      {
        \tl_put_right:Nn \l_@@_collect_tl {#1}
        \@@_collect_loop:
      }
  }
\cs_new_protected:Npn \@@_collect_search:NnF #1#2#3
  {
    \@@_collect_search_aux:NNn #1
      #2
      #1 {#3}
    \q_stop
  }
\cs_new_protected:Npn \@@_collect_search_aux:NNn #1#2#3
  {
    \token_if_eq_meaning:NNTF #1 #2
      { \use_i_delimit_by_q_stop:nw {#3} }
      { \@@_collect_search_aux:NNn #1 }
  }
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsection{Printing collected material}
%
% \begin{variable}{\l_@@_print_bool}
%   A flag to track whether to actually print anything.
%    \begin{macrocode}
\bool_new:N \l_@@_print_bool
\bool_set_true:N \l_@@_print_bool
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\siunitx_table_print:}
%    \begin{macrocode}
\cs_new_protected:Npn \siunitx_table_print:
  {
    \bool_if:NT \l_@@_print_bool
      { }
    \bool_set_false:N \l_@@_print_bool
  }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \end{implementation}
%
% \PrintIndex