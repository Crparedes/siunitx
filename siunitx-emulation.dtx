% \iffalse meta-comment
%
% File: siunitx-emulation.dtx Copyright (C) 2016-2018 Joseph Wright
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    https://www.latex-project.org/lppl.txt
%
% This file is part of the "siunitx bundle" (The Work in LPPL)
% and all files in that bundle must be distributed together.
%
% The released version of this bundle is available from CTAN.
%
% -----------------------------------------------------------------------
%
% The development version of the bundle can be found at
%
%    https://github.com/josephwright/siunitx
%
% for those people who are interested.
%
% -----------------------------------------------------------------------
%
%<*driver>
\documentclass{l3doc}
% The next line is needed so that \GetFileInfo will be able to pick up
% version data
\usepackage{siunitx}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{siunitx.sty}
%
% \title{^^A
%   \pkg{siunitx-emulation} -- Emulation^^A
%   \thanks{This file describes \fileversion,
%     last revised \filedate.}^^A
% }
%
% \author{^^A
%  Joseph Wright^^A
%  \thanks{^^A
%    E-mail:
%    \href{mailto:joseph.wright@morningstar2.co.uk}
%      {joseph.wright@morningstar2.co.uk}^^A
%   }^^A
% }
%
% \date{Released \filedate}
%
% \maketitle
%
% \begin{documentation}
%
% \end{documentation}
%
% \begin{implementation}
%
% \section{\pkg{siunitx-emulation} implementation}
%
% Identify the internal prefix (\LaTeX3 \pkg{DocStrip} convention). In contrast
% to other parts of the bundle, the functions here may need to redefine those
% from various submodules.
%    \begin{macrocode}
%<@@=siunitx>
%    \end{macrocode}
%
% \subsection{Version~2}
%
% Start the \pkg{DocStrip} guards.
%    \begin{macrocode}
%<*v2>
%    \end{macrocode}
%
% The old |s| column type is handled by using the functionality of
% \pkg{collcell}.
%    \begin{macrocode}
\RequirePackage { collcell }
\AtBeginDocument
  {
    \@@_declare_column:Nnn s
      { \collectcell \unit }
      { \endcollectcell }
  }
%    \end{macrocode}
%
% Some messages.
%    \begin{macrocode}
\msg_new:nnn { siunitx } { option-removed }
  { Option~"#1"~has~been~removed~in~this~release. }
%    \end{macrocode}
%
% \subsubsection{Number options}
%
% \begin{variable}
%   {\l_@@_number_input_realdigits_tl, \l_@@_number_input_symbol_tl}
%   Emulation for input options: |input-protect-tokens| is a simple no-op,
%   whilst |input-symbols| is combined with |input-digits|, so the latter is
%   also re-defined.
%    \begin{macrocode}
\keys_define:nn { siunitx }
  {
    input-digits code:n =
      {
        \tl_set:Nn \l_@@_number_input_realdigit_tl {#1}
        \tl_set:Nx \l_@@_number_input_digit_tl
          {
            \exp_not:V \l_@@_number_input_realdigit_tl
            \exp_not:V \l_@@_number_input_symbol_tl
          }
      } ,
    input-protect-tokens .code:n = ,
    input-symbols        .code:n =
      {
        \tl_set:Nn \l_@@_number_input_symbol_tl {#1}
        \tl_set:Nx \l_@@_number_input_digit_tl
          {
            \exp_not:V \l_@@_number_input_realdigit_tl
            \exp_not:V \l_@@_number_input_symbol_tl
          }
      }
  }
\tl_new:N \l_@@_number_input_realdigits_tl
\tl_new:N \l_@@_number_input_symbol_tl
%    \end{macrocode}
% \end{variable}
%
% Options for number processing: largely removals.
%    \begin{macrocode}
\keys_define:nn { siunitx }
  {
    add-decimal-zero .code:n =
      {
        \msg_warning:nnn { siunitx } { option-removed }
          { add-decimal-zero }
      } ,
    add-integer-zero .code:n =
      {
        \msg_warning:nnn { siunitx } { option-removed }
          { add-integer-zero }
      } ,
   explicit-sign .code:n =
      {
        \str_if_eq:nnTF {#1} { + }
          { \keys_set:nn { siunitx } { print-explicit-plus = true } }
          {
            \msg_warning:nnn { siunitx } { option-removed }
              { explicit-sign }
          }
      } ,
    retain-explicit-plus .code:n =
      {
        \msg_warning:nnn { siunitx } { option-removed }
          { retain-explicit-plus }
      } ,
    retain-unity-mantissa .meta:n = print-unity-mantissa ,
    retain-zero-exponent .meta:n = retain-zero-exponent ,
    omit-uncertainty .meta:n = drop-uncertainty ,
    scientific-notation .choice: ,
    scientific-notation / engineering .code:n =
      { \keys_set:nn { siunitx } { exponent-mode = engineering } } ,
    scientific-notation / fixed .code:n =
      { \keys_set:nn { siunitx } { exponent-mode = fixed } } ,
    scientific-notation / false .code:n =
      { \keys_set:nn { siunitx } { exponent-mode = input } } ,
    scientific-notation / true .code:n =
      { \keys_set:nn { siunitx } { exponent-mode = scientific } } ,
    zero-decimal-to-integer .code:n =
      {
        \msg_warning:nnn { siunitx } { option-removed }
          { zero-decimal-to-integer }
      }
  }
%    \end{macrocode}
%
% Standard settings where appropriate.
%    \begin{macrocode}
\keys_set:nn { siunitx }
  {
    input-symbols = \dots\pi
  }
%    \end{macrocode}
%
% \subsubsection{Unit options}
%
%    \begin{macrocode}
\keys_define:nn { siunitx }
  {
    bracket-unit-denominator .meta:n =
      { bracket-denominator = #1 } ,
    literal-superscript-as-power .code:n =
      {
        \msg_warning:nnn { siunitx } { option-removed }
          { literal-superscript-as-power }
      } ,
    per-mode / reciprocal .meta:n
      = { per-mode = power } ,
    per-mode / reciprocal-positive-first .meta:n
      = { per-mode = power-positive-first } ,
    power-font .code:n =
      {
        \msg_warning:nnn { siunitx } { option-removed }
          { power-font }
      } ,
    qualifier-phrase .code:n =
      {
        \msg_warning:nnn { siunitx } { option-removed }
          { qualifier-phrase }
      }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</v2>
%    \end{macrocode}
%
% \subsection{Version~1}
%
%    \begin{macrocode}
%<*v1>
%    \end{macrocode}
%
%    \begin{macrocode}
%</v1>
%    \end{macrocode}
%
% \end{implementation}
%
% \PrintIndex