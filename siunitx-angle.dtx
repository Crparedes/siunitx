% \iffalse meta-comment
%
% File: siunitx-angle.dtx Copyright (C) 2016-2018 Joseph Wright
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    https://www.latex-project.org/lppl.txt
%
% This file is part of the "siunitx bundle" (The Work in LPPL)
% and all files in that bundle must be distributed together.
%
% The released version of this bundle is available from CTAN.
%
% -----------------------------------------------------------------------
%
% The development version of the bundle can be found at
%
%    https://github.com/josephwright/siunitx
%
% for those people who are interested.
%
% -----------------------------------------------------------------------
%
%<*driver>
\documentclass{l3doc}
% The next line is needed so that \GetFileInfo will be able to pick up
% version data
\usepackage{siunitx}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{siunitx.sty}
%
% \title{^^A
%   \pkg{siunitx-angle} -- Formatting angles^^A
%   \thanks{This file describes \fileversion,
%     last revised \filedate.}^^A
% }
%
% \author{^^A
%  Joseph Wright^^A
%  \thanks{^^A
%    E-mail:
%    \href{mailto:joseph.wright@morningstar2.co.uk}
%      {joseph.wright@morningstar2.co.uk}^^A
%   }^^A
% }
%
% \date{Released \filedate}
%
% \maketitle
%
% \begin{documentation}
%
% \end{documentation}
%
% \begin{implementation}
%
% \section{\pkg{siunitx-angle} implementation}
%
% Start the \pkg{DocStrip} guards.
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% Identify the internal prefix (\LaTeX3 \pkg{DocStrip} convention): only
% internal material in this \emph{submodule} should be used directly.
%    \begin{macrocode}
%<@@=siunitx_angle>
%    \end{macrocode}
%
%  \begin{variable}
%    {
%      \l_@@_fill_degree_bool     ,
%      \l_@@_fill_minute_bool     ,
%      \l_@@_fill_second_bool     ,
%      \l_@@_angle_astronomy_bool ,
%      \l_@@_force_arc_bool       ,
%      \l_@@_force_decimal_bool
%    }
%    \begin{macrocode}
\keys_define:nn { siunitx }
  {
    angle-format .choice: ,
    angle-format / arc .code:n =
      {
        \bool_set_true:N \l_@@_force_arc_bool
        \bool_set_false:N \l_@@_force_decimal_bool
      } ,
    angle-format / decimal .code:n =
      {
        \bool_set_false:N \l_@@_force_arc_bool
        \bool_set_true:N \l_@@_force_decimal_bool
      } ,
    angle-format / input .code:n =
      {
        \bool_set_false:N \l_@@_force_arc_bool
        \bool_set_false:N \l_@@_force_decimal_bool
      } ,
    angle-symbol-over-decimal .bool_set:N =
      \l_@@_angle_astronomy_bool ,
    fill-arc-degrees .bool_set:N =
      \l_@@_fill_degree_bool ,
    fill-arc-minutes .bool_set:N =
      \l_@@_fill_minute_bool ,
    fill-arc-seconds .bool_set:N =
      \l_@@_fill_second_bool
  }
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\siunitx_angle:n}
% \begin{macro}{\siunitx_angle:nnn}
% \begin{macro}{\@@_arc_convert:n}
% \begin{macro}{\@@_arc_convert:nn}
%   The first step here is to force format conversion if required. Going to
%   a decimal is easy, going to arc format is a bit more painful: avoid
%   repeating calculations mainly for code readability.
%    \begin{macrocode}
\cs_new_protected:Npn \siunitx_angle:n #1
  {
    \bool_if:NTF \l_@@_force_arc_bool
      {
        \use:x
          { \@@_arc_convert:n { \fp_eval:n {#1} } }
      }
      { \@@_arc:nnn {#1} { } { } }
  }
\cs_new_protected:Npn \siunitx_angle:nnn #1#2#3
  {
    \bool_if:NTF \l_@@_force_decimal_bool
      {
        \exp_args:Nx \siunitx_angle:n
          { \fp_eval:n { #1 + 60 * #2 + 360 * #3 } }
      }
      { \@@_arc_fill:nnn {#1} {#2} {#3} }
  }
\cs_new_protected:Npn \@@_arc_convert:n #1
  {
    \use:x
      {
         \@@_arc_convert:nn
           { \fp_eval:n { trunc(#1,0) } }
           { \fp_eval:n { trunc(((#1 - trunc(#1,0)) * 60),0) } }
      }
  }
\cs_new_protected:Npn \@@_arc_convert:nn #1#2
  {
    \exp_args:Nnnx \siunitx_angle:nnn {#1} {#2}
      { \fp_eval:n { (#2 - trunc(#2,0)) * 60 } }
  }
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\@@_arc_fill:nnn}
% \begin{macro}[EXP]{\@@_arc_fill:nn}
% \begin{macro}{\@@_arc:nnn}
%    \begin{macrocode}
\cs_new_protected:Npn \@@_arc_fill:nnn #1#2#3
  {
    \use:x
      {
        \@@_arc:nnn
          { \@@_arc_fill:nn { degree } {#1} }
          { \@@_arc_fill:nn { minute } {#2} }
          { \@@_arc_fill:nn { second } {#3} }
      }
  }
\cs_new:Npn \@@_arc_fill:nn #1#2
  {
    \bool_lazy_and:nnTF
      { \use:c { l_@@_fill_ #1 _bool } }
      { \tl_if_blank_p:n {#2} }
      { 0 }
      {#2}
  }
\cs_new_protected:Npn \@@_arc:nnn #1#2#3
  {
  }
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
%    \begin{macrocode}
\keys_set:nn { siunitx }
  {
    angle-format = input
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \end{implementation}
%
% \PrintIndex