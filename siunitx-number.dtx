% \iffalse meta-comment
%
% File: siunitx-number.dtx Copyright (C) 2014 Joseph Wright
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    http://www.latex-project.org/lppl.txt
%
% This file is part of the "siunitx bundle" (The Work in LPPL)
% and all files in that bundle must be distributed together.
%
% The released version of this bundle is available from CTAN.
%
% -----------------------------------------------------------------------
%
% The development version of the bundle can be found at
%
%    http://github.com/josephwright/siunitx
%
% for those people who are interested.
%
% -----------------------------------------------------------------------
%
%<*driver>
\documentclass{l3doc}
% The next line is needed so that \GetFileInfo will be able to pick up
% version data
\usepackage{siunitx}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{siunitx.sty}
%
% \title{^^A
%   \pkg{siunitx-number} -- Parsing and formatting numbers^^A
%   \thanks{This file describes \fileversion,
%     last revised \filedate.}^^A
% }
%
% \author{^^A
%  Joseph Wright^^A
%  \thanks{^^A
%    E-mail:
%    \href{mailto:joseph.wright@morningstar2.co.uk}
%      {joseph.wright@morningstar2.co.uk}^^A
%   }^^A
% }
%
% \date{Released \filedate}
%
% \maketitle
%
% \begin{documentation}
%
% \end{documentation}
%
% \begin{implementation}
%
% \section{\pkg{siunitx-number} implementation}
%
% Start the DocStrip guards.
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% Identify the internal prefix (\LaTeX3 DocStrip convention): only internal
% material in this \emph{submodule} should be used directly.
%    \begin{macrocode}
%<@@=siunitx_number>
%    \end{macrocode}
%
% \subsection{Parsing numbers}
%
% Some parts of the number formatting process, for example normalising
% decimal markers or converting the |e| syntax to exponents, can be carried
% out in an \enquote{in line} fashion: there is no actual \emph{requirement}
% for an intermediate parsed format. However, this becomes more complex when
% processes such as rounding or interconversion of uncertainty formats are
% added. Moreover, for full control of tabular alignment, which this submodule
% provides underlying support for, a regularised parsed format is extremely
% valuable.
%
% Numbers as understood by the code here have a more extended form than the
% common concept of a signed real number with signed exponent part. In
% particular, there is a need to allow for any uncertainty, the possibility of
% a comparator part and the ability to retain information as to whether the
% input contained all of the parts of a number (for example, the difference
% between |1234| and |1234.|). This can be handled in several ways, for example
% multiple data stores, a property list or a suitably-designed custom token
% list. The latter approach is adopted here as it means that for the common
% case of using the input with little processing the number of steps to
% recover information is reduced.
% 
% Parsed numbers are stored as a single token list representing what is
% understood as a single number.
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \end{implementation}
%
% \PrintIndex