% \iffalse meta-comment
%
% File: siunitx-compound.dtx Copyright (C) 2018 Joseph Wright
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    https://www.latex-project.org/lppl.txt
%
% This file is part of the "siunitx bundle" (The Work in LPPL)
% and all files in that bundle must be distributed together.
%
% The released version of this bundle is available from CTAN.
%
% -----------------------------------------------------------------------
%
% The development version of the bundle can be found at
%
%    https://github.com/josephwright/siunitx
%
% for those people who are interested.
%
% -----------------------------------------------------------------------
%
%<*driver>
\documentclass{l3doc}
% The next line is needed so that \GetFileInfo will be able to pick up
% version data
\usepackage{siunitx}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{siunitx.sty}
%
% \title{^^A
%   \pkg{siunitx-quantity} -- Multi-part numbers^^A
%   \thanks{This file describes \fileversion,
%     last revised \filedate.}^^A
% }
%
% \author{^^A
%  Joseph Wright^^A
%  \thanks{^^A
%    E-mail:
%    \href{mailto:joseph.wright@morningstar2.co.uk}
%      {joseph.wright@morningstar2.co.uk}^^A
%   }^^A
% }
%
% \date{Released \filedate}
%
% \maketitle
%
% \begin{documentation}
%
% \end{documentation}
%
% \begin{implementation}
%
% Start the \pkg{DocStrip} guards.
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% \section{\pkg{siunitx-compound} implementation}
%
% \subsection{Lists}
%
% Identify the internal prefix (\LaTeX3 \pkg{DocStrip} convention): only
% internal material in this \emph{submodule} should be used directly.
%    \begin{macrocode}
%<@@=siunitx_list>
%    \end{macrocode}
%
% \begin{variable}
%   {
%     \l_@@_separator_tl       ,
%     \l_@@_separator_final_tl ,
%     \l_@@_separator_pair_tl  ,
%     \l_@@_brackets_bool      ,
%     \l_@@_repeat_bool
%   }
%   List options.
%    \begin{macrocode}
\keys_define:nn { siunitx }
  {
    list-final-separator .tl_set:N = \l_@@_separator_final_tl ,
    list-pair-separator  .tl_set:N = \l_@@_separator_pair_tl  ,
    list-separator       .tl_set:N = \l_@@_separator_tl       ,
    list-mode .choice:,
    list-mode / brackets .code:n =
      {
        \bool_set_true:N  \l_@@_brackets_bool
        \bool_set_false:N \l_@@_repeat_bool
      } ,
    list-mode / repeat .code:n   =
      {
        \bool_set_false:N \l_@@_brackets_bool
        \bool_set_true:N  \l_@@_repeat_bool
      } ,
    list-mode / single .code:n   =
      {
        \bool_set_false:N \l_@@_brackets_bool
        \bool_set_false:N \l_@@_repeat_bool
      }
  }
%    \end{macrocode}
%
% \subsection{Products}
%
% Identify the internal prefix (\LaTeX3 \pkg{DocStrip} convention): only
% internal material in this \emph{submodule} should be used directly.
%    \begin{macrocode}
%<@@=siunitx_product>
%    \end{macrocode}
%
% \begin{variable}{\l_@@_mode_tl, \l_@@_phrase_tl, \l_@@_symbol_tl}
%   Options for products.
%    \begin{macrocode}
\keys_define:nn { siunitx }
  {
    product-mode .choices:nn =
      { phrase , symbol }
      { \tl_set_eq:NN \l_@@_mode_tl \l_keys_choice_tl } ,
    product-phrase .tl_set:N = \l_@@_phrase_tl ,
    product-symbol .tl_set:N = \l_@@_symbol_tl
  }
%    \end{macrocode}
% \end{variable}
%
% \subsection{Ranges}
%
% Identify the internal prefix (\LaTeX3 \pkg{DocStrip} convention): only
% internal material in this \emph{submodule} should be used directly.
%    \begin{macrocode}
%<@@=siunitx_range>
%    \end{macrocode}
%
% \begin{variable}
%   {
%     \l_@@_phrase_tl     ,
%     \l_@@_brackets_bool ,
%     \l_@@_repeat_bool
%   }
%    \begin{macrocode}
\keys_define:nn { siunitx }
  {
    range-phrase .tl_set:N = \l_@@_phrase_tl ,
    range-mode .choice: ,
    range-mode / brackets .code:n =
      {
        \bool_set_true:N  \l_@@_brackets_bool
        \bool_set_false:N \l_@@_repeat_bool
      } ,
    range-mode / repeat .code:n =
      {
        \bool_set_false:N \l_@@_brackets_bool
        \bool_set_true:N  \l_@@_repeat_bool
      } ,
    range-mode / single .code:n =
      {
        \bool_set_false:N \l_@@_brackets_bool
        \bool_set_false:N \l_@@_repeat_bool
      }
  }
%    \end{macrocode}
% \end{variable}
%
% \subsection{Standard settings for module options}
%
% Some of these follow naturally from the point of definition
% (\foreign{e.g.}~boolean variables are always |false| to begin with),
% but for clarity everything is set here.
%    \begin{macrocode}
\keys_set:nn { siunitx }
  {
    list-final-separator = { ~ and ~ } ,
    list-pair-separator  = { ~ and ~ } ,
    list-separator       = { , ~ }     ,
    list-mode            = repeat      ,
    product-mode         = symbol      ,
    product-phrase       = { ~ by ~ }  ,
    product-symbol       = \times      ,
    range-phrase         = { ~ to ~ }  ,
    range-mode           = repeat
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \end{implementation}
%
% \PrintIndex